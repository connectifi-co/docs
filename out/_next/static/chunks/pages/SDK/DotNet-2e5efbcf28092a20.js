(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[64],{1355:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/SDK/DotNet",function(){return t(9912)}])},1057:function(e,n,t){"use strict";var i=t(1527);t(959);let s={logo:(0,i.jsx)("span",{children:(0,i.jsx)("img",{src:"wordmark.png",alt:"Connectifi Wordmark",width:"200"})}),project:{link:"https://github.com/connectifi-co/docs"},chat:{link:"https://discord.com"},docsRepositoryBase:"https://github.com/connectifi-co/docs",footer:{text:""}};n.Z=s},9912:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return r.Z}});var i=t(1527),s=t(7265),a=t(4603),o=t(1057);t(6971);var c=t(313);t(8090);var r=t(5228);function d(e){let n=Object.assign({h1:"h1",p:"p",a:"a",code:"code",h2:"h2",pre:"pre",span:"span",h3:"h3",ul:"ul",li:"li"},(0,c.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{children:"DotNet SDK Installation"}),"\n",(0,i.jsxs)(n.p,{children:["This ",(0,i.jsx)(n.a,{href:"https://github.com/connectifi-co/agent-dotnet",children:"repository"})," provids a native .NET cliet for the Connectifi service along with a WPF wrapper and an example application."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"AgentWPF:"})," WPF wrapper of the Connectifi.DesktopAgent making is the Agent easily consumable in a WPF application"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Connectifi.DesktopAgent:"})," the core DesktopAgent APIs and mechanics of the Connectifi agent\nConnectifiWpfApp: test application for the Connectifi.DesktopAgent project"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Equity Order Book:"})," Demo WPF application using AgentWPF to connect"]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.a,{href:"https://github.com/connectifi-co/equity-orderboo",children:"Equity Order Book"})," as startup project."]}),"\n",(0,i.jsxs)(n.p,{children:["Modify the Agent interop service URL and appId in Equity Order ",(0,i.jsx)(n.code,{children:"Book/MainWindow.xaml.cs"})," as needed. e.g."]}),"\n",(0,i.jsx)(n.pre,{"data-language":"text","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        private async void Window_Loaded(object sender, RoutedEventArgs e)"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        {"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"            var agentControl = new DesktopAgentWPF();"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"            (this.Content as Grid).Children.Add(agentControl);"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"            desktopAgent = await agentControl.CreateAgent([INTEROP SERVICE URL HERE], [APPID HERE]);"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"            desktopAgent.OnHandleIntentResolution += (_, evt) =>"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"            {"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"                _resolverDialog = new AppSelectionWPF(this);"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"                CurrentIntent = _currentIntent;"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"                CurrentTicker = _currentTicker;"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"                _resolverDialog.ShowAppSelectionAsync(evt.HandleIntentResolution);"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"            };"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"            desktopAgent.OnConnectifiEvent += OnConnectifiEvent;"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"            return;"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        }"})})]})}),"\n",(0,i.jsx)(n.p,{children:"Note: you will need to connect to an authenticated directory to have connection between your .NET App and another tech stack like a browser."}),"\n",(0,i.jsxs)(n.p,{children:["To use with your own .NET application, ",(0,i.jsx)(n.a,{href:"https://github.com/connectifi-co/agent-dotnet",children:"fork this repo"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/microsoft-edge/webview2/",children:"Json.NET"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/JamesNK/Newtonsoft.Json",children:"Microsoft WebView2"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/morganstanley/fdc3-dotnet",children:"fdc3-dotnet"})}),"\n"]})]})}e=t.hmd(e),(0,s.j)({Content:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)},nextraLayout:a.ZP,hot:e.hot,pageOpts:{filePath:"pages/SDK/DotNet.mdx",route:"/SDK/DotNet",frontMatter:{},pageMap:[{kind:"Folder",name:"Actions",route:"/Actions",children:[{kind:"MdxPage",name:"Actions",route:"/Actions/Actions"},{kind:"Meta",data:{Actions:"Actions","data-api":"Data API","deep-link":"Deep Link","enhanced-deep-links":"Enhanced Deep Links"}},{kind:"MdxPage",name:"data-api",route:"/Actions/data-api"},{kind:"MdxPage",name:"deep-link",route:"/Actions/deep-link"},{kind:"MdxPage",name:"enhanced-deep-links",route:"/Actions/enhanced-deep-links"}]},{kind:"MdxPage",name:"Applications",route:"/Applications"},{kind:"MdxPage",name:"Channels",route:"/Channels"},{kind:"MdxPage",name:"Contexts",route:"/Contexts"},{kind:"MdxPage",name:"Directories",route:"/Directories"},{kind:"MdxPage",name:"Intents",route:"/Intents"},{kind:"Folder",name:"Receptors",route:"/Receptors",children:[{kind:"MdxPage",name:"Broadcast",route:"/Receptors/Broadcast"},{kind:"MdxPage",name:"Multibroadcast",route:"/Receptors/Multibroadcast"},{kind:"MdxPage",name:"RaiseIntent",route:"/Receptors/RaiseIntent"},{kind:"MdxPage",name:"Receptors",route:"/Receptors/Receptors"},{kind:"Meta",data:{Receptors:"Receptors",Broadcast:"Broadcast",Multibroadcast:"Multi-Broadcast",RaiseIntent:"Raise Intent"}}]},{kind:"Folder",name:"SDK",route:"/SDK",children:[{kind:"MdxPage",name:"DotNet",route:"/SDK/DotNet"},{kind:"MdxPage",name:"Web",route:"/SDK/Web"},{kind:"Meta",data:{DotNet:".Net",iOS:"iOS",Web:"Web"}},{kind:"MdxPage",name:"iOS",route:"/SDK/iOS"}]},{kind:"Folder",name:"Use Cases",route:"/Use Cases",children:[{kind:"MdxPage",name:"FDC3",route:"/Use Cases/FDC3"},{kind:"Meta",data:{FDC3:"FDC3"}}]},{kind:"Meta",data:{index:"Introduction",SDK:"SDK",Channels:"Channels",Applications:"Applications",Directories:"Directories",Intents:"Intents",Contexts:"Contexts",Actions:"Actions",Receptors:"Receptors",Security:"Security",about:{title:"About",type:"page"},contact:{title:"Contact â†—",type:"page",href:"mailto:support@connectifi.co",newWindow:!0},advanced:"Advanced"}},{kind:"MdxPage",name:"about",route:"/about"},{kind:"MdxPage",name:"advanced",route:"/advanced"},{kind:"MdxPage",name:"index",route:"/"}],headings:[{depth:1,value:"DotNet SDK Installation",id:"dotnet-sdk-installation"},{depth:2,value:"Usage",id:"usage"},{depth:3,value:"Dependencies",id:"dependencies"}],timestamp:1731437497e3,flexsearch:{codeblocks:!0},title:"DotNet SDK Installation"},themeConfig:o.Z,pageNextRoute:"/SDK/DotNet",pageOptsChecksum:void 0,dynamicMetaModules:[]})}},function(e){e.O(0,[774,589,888,179],function(){return e(e.s=1355)}),_N_E=e.O()}]);